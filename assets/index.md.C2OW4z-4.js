import{_ as e,c as t,o as n}from"./chunks/framework.a4p3ILtL.js";const f=JSON.parse(`{"title":"","description":"","frontmatter":{"layout":"home","hero":{"name":"DCMfx","text":null,"tagline":"Tools and libraries for working with DICOM","actions":[{"theme":"brand","text":"Learn More","link":"./introduction"},{"theme":"alt","text":"Tools","link":"./tools/overview"},{"theme":"alt","text":"Libraries","link":"./libraries/overview"},{"theme":"alt","text":"GitHub","link":"https://github.com/dcmfx"}]},"features":[{"title":"CLI Tool","icon":"âš¡","link":"./tools/cli","details":"A super-fast DICOM CLI tool with extremely low memory usage. Written in\\nRust and available for all platforms.\\n"},{"title":"VS Code Extension","icon":"ðŸ§©","link":"./tools/vs-code-extension","details":"DCMfx's VS Code extension lets you view and convert DICOM and DICOM JSON\\nfiles directly in Visual Studio Code.\\n"},{"title":"DICOM Streaming","icon":"ðŸŒŠ","link":"./design","details":"Stream decode and encode DICOM data. Read, modify, add, and remove data\\nelements as they stream through.\\n"},{"title":"Compliant","icon":"âœ…","link":"./conformance","details":"Supports all DICOM files, every transfer syntax, all character sets, and\\ngracefully handles truncated or corrupted data.\\n"}]},"headers":[],"relativePath":"index.md","filePath":"index.md"}`),a={name:"index.md"};function o(i,l,r,s,d,c){return n(),t("div")}const u=e(a,[["render",o]]);export{f as __pageData,u as default};
