import{_ as i,c as a,o as t,aj as e}from"./chunks/framework.wTHDseTJ.js";const c=JSON.parse('{"title":"CLI Tool","description":"","frontmatter":{},"headers":[],"relativePath":"tools/cli.md","filePath":"tools/cli.md"}'),n={name:"tools/cli.md"};function l(p,s,h,d,k,o){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="cli-tool" tabindex="-1">CLI Tool <a class="header-anchor" href="#cli-tool" aria-label="Permalink to &quot;CLI Tool&quot;">​</a></h1><p>The <code>dcmfx</code> CLI tool makes the capabilities of DCMfx available on the command line.</p><h2 id="installation" tabindex="-1">Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;Installation&quot;">​</a></h2><p>Select your platform below to see its installation instructions.</p><details class="details custom-block"><summary>Windows</summary><p>Download the latest version of <code>dcmfx.exe</code> for Windows <a href="https://github.com/dcmfx/dcmfx/releases/latest" target="_blank" rel="noreferrer">here</a>.</p></details><details class="details custom-block"><summary>macOS</summary><p>Install <a href="https://brew.sh" target="_blank" rel="noreferrer">Homebrew</a>, then install DCMfx using the provided tap:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tap</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dcmfx/tap</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">brew</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dcmfx</span></span></code></pre></div></details><details class="details custom-block"><summary>Linux</summary><ul><li><p>For Ubuntu, Debian, Linux Mint, and other Debian-based distributions, an APT repository is provided:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;deb [trusted=yes] https://dcmfx.github.io/apt-repository stable main&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tee</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/apt/sources.list.d/dcmfx.list</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dcmfx</span></span></code></pre></div></li></ul><hr><ul><li><p>For Red Hat, Fedora, Amazon Linux, and other RPM-based distributions, a YUM repository is provided:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">echo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;[dcmfx]\\nname=DCMfx\\nbaseurl=http://dcmfx.github.io/yum-repository\\nenabled=1\\ngpgcheck=0&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> tee</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /etc/yum.repos.d/dcmfx.repo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> makecache</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dcmfx</span></span></code></pre></div></li></ul><hr><ul><li><p>For Arch Linux, a <a href="https://aur.archlinux.org/packages/dcmfx" target="_blank" rel="noreferrer">package</a> is provided in the Arch User Repository (AUR). Install it with your preferred AUR helper (e.g. <a href="https://github.com/Jguer/yay" target="_blank" rel="noreferrer">Yay</a>):</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">yay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dcmfx</span></span></code></pre></div></li></ul><hr><ul><li>Alternatively, download the latest binary or package <a href="https://github.com/dcmfx/dcmfx/releases/latest" target="_blank" rel="noreferrer">here</a> and install it manually.</li></ul></details><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><p>After installation, run <code>dcmfx --help</code> to see the available commands:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>$ dcmfx --help</span></span>
<span class="line"><span></span></span>
<span class="line"><span>DCMfx is a CLI tool for working with DICOM and DICOM JSON</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Usage: dcmfx [OPTIONS] &lt;COMMAND&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Commands:</span></span>
<span class="line"><span>  get-pixel-data  Extracts pixel data from DICOM P10 files, writing it to image</span></span>
<span class="line"><span>                  and video files</span></span>
<span class="line"><span>  modify          Modifies the content of DICOM P10 files</span></span>
<span class="line"><span>  print           Prints the content of DICOM P10 files</span></span>
<span class="line"><span>  json-to-dcm     Converts DICOM JSON files to DICOM P10 files</span></span>
<span class="line"><span>  dcm-to-json     Converts DICOM P10 files to DICOM JSON files</span></span>
<span class="line"><span>  help            Print this message or the help of the given subcommand(s)</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Options:</span></span>
<span class="line"><span>      --print-stats  Write timing and memory stats to stderr on exit</span></span>
<span class="line"><span>  -h, --help         Print help</span></span>
<span class="line"><span>  -V, --version      Print version</span></span></code></pre></div><h3 id="examples" tabindex="-1">Examples <a class="header-anchor" href="#examples" aria-label="Permalink to &quot;Examples&quot;">​</a></h3><ol><li><p>Print a DICOM P10 file&#39;s data set to stdout:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dcmfx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> print</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.dcm</span></span></code></pre></div></li><li><p>Convert a DICOM P10 file to a DICOM JSON file:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dcmfx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dcm-to-json</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.dcm</span></span></code></pre></div><p>To pretty-print the DICOM JSON directly to stdout:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dcmfx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dcm-to-json</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.dcm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --pretty</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --output-filename</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span></span></code></pre></div></li><li><p>Convert a DICOM JSON file to a DICOM P10 file:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dcmfx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> json-to-dcm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.json</span></span></code></pre></div></li><li><p>Extract pixel data from a DICOM P10 file to one image file per frame:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dcmfx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get-pixel-data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.dcm</span></span></code></pre></div><p>Each frame of pixel data can be decoded and written to PNG, 16-bit PNG, JPEG, or WebP Lossless images:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dcmfx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get-pixel-data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.dcm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --format</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> png</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dcmfx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get-pixel-data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.dcm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --format</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> png16</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dcmfx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get-pixel-data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.dcm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --format</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --jpeg-quality</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 90</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dcmfx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get-pixel-data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.dcm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --format</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> webp</span></span></code></pre></div><p>Single channel data can also specify a VOI window center and width and/or a well-known color palette to use:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dcmfx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get-pixel-data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.dcm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --format</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> png</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --voi-window</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 500</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --color-palette</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hot-iron</span></span></code></pre></div><p>The images can be rotated or flipped by specifying a transform:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dcmfx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get-pixel-data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.dcm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --format</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --transform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rotate90</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dcmfx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get-pixel-data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.dcm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --format</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jpg</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --transform</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> flip-vertical</span></span></code></pre></div></li><li><p>Extract pixel data from a DICOM P10 file to an MP4 video:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dcmfx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get-pixel-data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.dcm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --format</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mp4</span></span></code></pre></div><p>Additional options are available to specify the codec, video quality, encoder preset, pixel format, frame rate override, and so on.</p></li><li><p>Rewrite a DICOM P10 file. This will convert the specific character set to UTF-8, change sequences and items to undefined length, and correct invalid files where possible:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dcmfx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> modify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.dcm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --output-filename</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output.dcm</span></span></code></pre></div></li><li><p>Modify a DICOM P10 file to use the &#39;Deflated Explicit VR Little Endian&#39; transfer syntax with maximum compression:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dcmfx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> modify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.dcm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> output.dcm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --transfer-syntax</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deflated-explicit-vr-little-endian</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  --zlib-compression-level</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 9</span></span></code></pre></div><p>The <code>modify</code> command can only convert between the following transfer syntaxes:</p><ul><li>Implicit VR Little Endian</li><li>Explicit VR Little Endian</li><li>Deflated Explicit VR Little Endian</li><li>Explicit VR Big Endian</li></ul><p>Conversion between other transfer syntaxes is not supported.</p></li><li><p>Anonymize a DICOM P10 file in-place by removing all identifying data elements and private data elements:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dcmfx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> modify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.dcm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --in-place</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --anonymize</span></span></code></pre></div><p>Note that this does not remove any identifying information baked into pixel data or other binary data elements.</p></li><li><p>Remove the top-level <em>&#39;(7FE0,0010) Pixel Data&#39;</em> data element from a DICOM P10 file:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dcmfx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> modify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.dcm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --in-place</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --delete-tag</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 7FE00010</span></span></code></pre></div><p>Multiple data elements can be deleted by using a comma as a separator:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dcmfx</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> modify</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input.dcm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --in-place</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --delete-tag</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 00100010</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --delete-tag</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 00100030</span></span></code></pre></div></li></ol><h2 id="gleam-cli" tabindex="-1">Gleam CLI <a class="header-anchor" href="#gleam-cli" aria-label="Permalink to &quot;Gleam CLI&quot;">​</a></h2><p>The above examples assume the Rust version of the CLI tool is in use, however most functionality is also supported by the Gleam version of the CLI, which can be run with <code>gleam run</code> in <code>/src/gleam/dcmfx_cli</code>.</p><p>The Gleam CLI is primarily used when working on the Gleam implementation of DCMfx. The Rust CLI is recommended for regular use as it is faster, has more features, and is a single standalone binary.</p>`,15)]))}const F=i(n,[["render",l]]);export{c as __pageData,F as default};
